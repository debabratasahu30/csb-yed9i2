{"version":3,"sources":["Components/UI/Button.js","Components/UI/Card.js","Components/Users/AddUser.js","Components/Users/UserList.js","App.js","index.js"],"names":["Button","props","className","type","onClick","children","Card","AddUser","nameInputRef","useRef","ageInputRef","onSubmit","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","alert","onAddUser","htmlFor","id","ref","UserList","users","map","user","name","age","App","useState","userLists","setUserLists","uName","UAge","prevUsersList","Math","random","toString","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gOAWeA,EAXA,SAACC,GACd,OACE,wBACEC,UAAU,aACVC,KAAMF,EAAME,MAAQ,SACpBC,QAASH,EAAMG,QAHjB,SAKGH,EAAMI,YCHEC,G,MAHF,SAACL,GACZ,OAAO,qBAAKC,UAAU,iBAAf,SAAiCD,EAAMI,aCyCjCE,EAxCC,SAACN,GACf,IAAMO,EAAeC,mBACfC,EAAcD,mBAkBpB,OACE,eAAC,EAAD,WACE,+CAEE,0BAEF,uBAAME,SAvBa,SAACC,GACtBA,EAAMC,iBACN,IAAMC,EAAcN,EAAaO,QAAQC,MACnCC,EAAiBP,EAAYK,QAAQC,MAC3C,OAAkC,IAA9BF,EAAYI,OAAOC,QAAiD,IAAjCF,EAAeC,OAAOC,OACpDC,MAAM,kCAEXH,GAAkB,GACpBP,EAAYK,QAAQC,MAAQ,GACrBI,MAAM,kCAIfnB,EAAMoB,UAAUP,EAAaG,GAC7BT,EAAaO,QAAQC,MAAQ,QAC7BN,EAAYK,QAAQC,MAAQ,MAQ1B,UACE,uBAAOM,QAAQ,WAAf,sBACA,uBAAOC,GAAG,WAAWpB,KAAK,OAAOqB,IAAKhB,IACtC,uBACA,uBACA,uBAAOc,QAAQ,MAAf,yBACA,uBAAOC,GAAG,MAAMpB,KAAK,SAASqB,IAAKd,IACnC,uBACA,uBACA,cAAC,EAAD,CAAQP,KAAK,SAAb,6BCnBOsB,EAlBE,SAACxB,GAChB,OACE,eAAC,EAAD,WACE,2DAEE,0BAEF,6BACGA,EAAMyB,MAAMC,KAAI,SAACC,GAAD,OACf,+BACGA,EAAKC,KADR,KACgBD,EAAKE,IADrB,gBAASF,EAAKL,aCNT,SAASQ,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAAUb,UAVS,SAACc,EAAOC,GAC7BF,GAAa,SAACG,GACZ,MAAM,GAAN,mBACKA,GADL,CAEE,CAAER,KAAMM,EAAOL,IAAKM,EAAMb,GAAIe,KAAKC,SAASC,oBAO9C,uBACA,uBACA,cAAC,EAAD,CAAUd,MAAOO,OCdvB,IAAMQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACd,EAAD,MAEFU,K","file":"static/js/main.8e56a15f.chunk.js","sourcesContent":["const Button = (props) => {\r\n  return (\r\n    <button\r\n      className=\"submit-btn\"\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import \"./card.css\";\r\nconst Card = (props) => {\r\n  return <div className=\"card-container\">{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import React, { useRef } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\nconst AddUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredUserAge = ageInputRef.current.value;\r\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\r\n      return alert(\"Name or Age should no be blank\");\r\n    }\r\n    if (enteredUserAge <= 0) {\r\n      ageInputRef.current.value = \"\";\r\n      return alert(\"Age should be greater than 0\");\r\n    }\r\n    //onsole.log(enteredName);\r\n    //console.log(enteredUserAge);\r\n    props.onAddUser(enteredName, enteredUserAge);\r\n    nameInputRef.current.value = \"\";\r\n    ageInputRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <Card>\r\n      <h3>\r\n        Add User Form\r\n        <hr />\r\n      </h3>\r\n      <form onSubmit={addUserHandler}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input id=\"username\" type=\"text\" ref={nameInputRef} />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"age\">Age (Years)</label>\r\n        <input id=\"age\" type=\"number\" ref={ageInputRef} />\r\n        <br />\r\n        <br />\r\n        <Button type=\"submit\">Add User</Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\nexport default AddUser;\r\n","import Card from \"../UI/Card\";\r\nconst UserList = (props) => {\r\n  return (\r\n    <Card>\r\n      <h3>\r\n        List of Above Added Users\r\n        <hr />\r\n      </h3>\r\n      <ul>\r\n        {props.users.map((user) => (\r\n          <li key={user.id}>\r\n            {user.name} ({user.age} Years Old)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, Fragment } from \"react\";\nimport \"./styles.css\";\nimport AddUsers from \"./Components/Users/AddUser\";\nimport UserList from \"./Components/Users/UserList\";\nexport default function App() {\n  const [userLists, setUserLists] = useState([]);\n  const addUserHandler = (uName, UAge) => {\n    setUserLists((prevUsersList) => {\n      return [\n        ...prevUsersList,\n        { name: uName, age: UAge, id: Math.random().toString() }\n      ];\n    });\n  };\n  return (\n    <Fragment>\n      <AddUsers onAddUser={addUserHandler} />\n      <br />\n      <br />\n      <UserList users={userLists} />\n    </Fragment>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}